{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/qiongxiao/Documents/my/projects/library/src/pages/Search/index.js\";\nimport React from 'react';\nimport { Button, Input, Pagination, Form, Space, Select } from 'antd';\nimport { SearchOutlined, MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { GetBookList } from '../../api';\nimport Banner from '../../components/Banner';\nimport './index.css';\nconst {\n  Option\n} = Select;\nconst condition = [{\n  label: '与',\n  value: 'and'\n}, {\n  label: '或',\n  value: 'or'\n}];\nconst category = [{\n  label: '任意字段',\n  value: 'arbitrary'\n}, {\n  label: '题名',\n  value: 'theme'\n}, {\n  label: '作者',\n  value: 'author'\n}];\nexport default class Details extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSearch = value => {\n      const {\n        page,\n        limit\n      } = this.state;\n      GetBookList(page, limit, value).then(res => {\n        const {\n          page,\n          limit,\n          total,\n          data\n        } = res.data;\n        this.setState({\n          page,\n          limit,\n          total,\n          bookList: data\n        });\n      });\n    };\n\n    this.onShowSizeChange = (current, pageSize) => {\n      console.log(current, pageSize);\n    };\n\n    this.toDetail = item => {\n      this.props.history.push({\n        pathname: `/details/${item.id}`,\n        query: item\n      });\n    };\n\n    this.Mohu = () => {\n      const {\n        searchValue\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(Input.Search, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u6A21\\u7CCA\\u68C0\\u7D22\\u5B57\\u6BB5\",\n        allowClear: true,\n        enterButton: \"\\u68C0\\u7D22\",\n        size: \"large\",\n        defaultValue: searchValue,\n        onSearch: this.onSearch,\n        prefix: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      bookList: [],\n      page: 1,\n      limit: 10,\n      total: 0,\n      searchValue: ''\n    };\n  }\n\n  componentDidMount() {\n    var _this$props$location;\n\n    const {\n      page,\n      limit,\n      searchValue\n    } = this.state;\n\n    if (typeof ((_this$props$location = this.props.location) === null || _this$props$location === void 0 ? void 0 : _this$props$location.query) !== 'undefined') {\n      var _this$props$location2;\n\n      this.setState({\n        searchValue: (_this$props$location2 = this.props.location) === null || _this$props$location2 === void 0 ? void 0 : _this$props$location2.query.searchValue\n      });\n    }\n\n    GetBookList(page, limit, searchValue).then(res => {\n      const {\n        page,\n        limit,\n        total,\n        data\n      } = res.data;\n\n      if (res.data.code === 0) {\n        this.setState({\n          page,\n          limit,\n          total,\n          bookList: data\n        });\n      }\n    });\n  } // onFinish = values => {\n  //   console.log('Received values of form:', values);\n  // };\n\n\n  // Gaoji = () => {\n  //   return (\n  //     <Form name=\"dynamic_form_nest_item\" onFinish={this.onFinish} autoComplete=\"off\">\n  //       <Form.List name=\"users\">\n  //         {(fields, { add, remove }) => (\n  //           <>\n  //             {fields.map(field => (\n  //               <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n  //                 <Form.Item\n  //                   {...field}\n  //                   name={[field.name, 'first']}\n  //                   fieldKey={[field.fieldKey, 'first']}\n  //                   rules={[{ required: true, message: 'Missing first name' }]}\n  //                 >\n  //                   <Select style={{ width: 100 }} size=\"large\" defaultValue=\"and\">\n  //                     {condition.map(item => (\n  //                       <Option key={item.value} value={item.value}>\n  //                         {item.label}\n  //                       </Option>\n  //                     ))}\n  //                   </Select>\n  //                 </Form.Item>\n  //                 <Form.Item\n  //                   {...field}\n  //                   name={[field.name, 'first']}\n  //                   fieldKey={[field.fieldKey, 'first']}\n  //                   rules={[{ required: true, message: 'Missing first name' }]}\n  //                 >\n  //                   <Select style={{ width: 150 }} size=\"large\" defaultValue=\"arbitrary\">\n  //                     {category.map(item => (\n  //                       <Option key={item.value} value={item.value}>\n  //                         {item.label}\n  //                       </Option>\n  //                     ))}\n  //                   </Select>\n  //                 </Form.Item>\n  //                 <Form.Item\n  //                   {...field}\n  //                   name={[field.name, 'last']}\n  //                   fieldKey={[field.fieldKey, 'last']}\n  //                   rules={[{ required: true, message: 'Missing last name' }]}\n  //                 >\n  //                   <Input placeholder=\"输入查询\" style={{ width: 600 }} size=\"large\" />\n  //                 </Form.Item>\n  //                 <MinusCircleOutlined onClick={() => remove(field.name)} />\n  //               </Space>\n  //             ))}\n  //             <Form.Item>\n  //               <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />} size=\"large\">\n  //                 添加新行\n  //             </Button>\n  //             </Form.Item>\n  //           </>\n  //         )}\n  //       </Form.List>\n  //       <Form.Item>\n  //         <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n  //           查询\n  //       </Button>\n  //       </Form.Item>\n  //     </Form>\n  //   )\n  // }\n  render() {\n    const {\n      page,\n      bookList,\n      total\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-background\",\n        children: this.Mohu()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-result-box\",\n        children: bookList.map(item => {\n          const {\n            img,\n            bookName,\n            author,\n            publish,\n            introduce,\n            id\n          } = item;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-result\",\n            onClick: () => this.toDetail(item),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: img,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-result-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"\\u9898  \\u540D\\uFF1A\", bookName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"\\u4F5C  \\u8005\\uFF1A\", author]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"\\u51FA\\u7248\\u793E\\uFF1A\", publish]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"\\u7B80  \\u4ECB\\uFF1A\", introduce]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        showSizeChanger: true,\n        onShowSizeChange: this.onShowSizeChange,\n        defaultCurrent: page,\n        total: total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/qiongxiao/Documents/my/projects/library/src/pages/Search/index.js"],"names":["React","Button","Input","Pagination","Form","Space","Select","SearchOutlined","MinusCircleOutlined","PlusOutlined","GetBookList","Banner","Option","condition","label","value","category","Details","Component","constructor","props","onSearch","page","limit","state","then","res","total","data","setState","bookList","onShowSizeChange","current","pageSize","console","log","toDetail","item","history","push","pathname","id","query","Mohu","searchValue","componentDidMount","location","code","render","map","img","bookName","author","publish","introduce"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Input, Pagination, Form, Space, Select } from 'antd';\nimport { SearchOutlined, MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { GetBookList } from '../../api';\nimport Banner from '../../components/Banner';\nimport './index.css';\n\nconst { Option } = Select;\n\nconst condition = [{ label: '与', value: 'and' }, { label: '或', value: 'or' }];\nconst category = [{ label: '任意字段', value: 'arbitrary' }, { label: '题名', value: 'theme' }, { label: '作者', value: 'author' }];\n\nexport default class Details extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookList: [],\n      page: 1,\n      limit: 10,\n      total: 0,\n      searchValue: ''\n    };\n  };\n\n  componentDidMount() {\n    const { page, limit, searchValue } = this.state;\n    if (typeof this.props.location?.query !== 'undefined') {\n      this.setState({\n        searchValue: this.props.location?.query.searchValue,\n      });\n    }\n    GetBookList(page, limit, searchValue).then(res => {\n      const { page, limit, total, data } = res.data;\n      if (res.data.code === 0) {\n        this.setState({\n          page,\n          limit,\n          total,\n          bookList: data,\n        })\n      }\n    });\n  }\n\n  // onFinish = values => {\n  //   console.log('Received values of form:', values);\n  // };\n\n  onSearch = value => {\n    const { page, limit } = this.state;\n    GetBookList(page, limit, value).then(res => {\n      const { page, limit, total, data } = res.data;\n      this.setState({\n        page,\n        limit,\n        total,\n        bookList: data,\n      })\n    });\n  }\n\n  onShowSizeChange = (current, pageSize) => {\n    console.log(current, pageSize);\n  }\n\n  toDetail = (item) => {\n    this.props.history.push({ pathname: `/details/${item.id}`, query: item });\n  }\n\n  Mohu = () => {\n    const { searchValue } = this.state;\n    return (\n      <Input.Search\n        placeholder=\"请输入模糊检索字段\"\n        allowClear\n        enterButton=\"检索\"\n        size=\"large\"\n        defaultValue={searchValue}\n        onSearch={this.onSearch}\n        prefix={<SearchOutlined />}\n      />\n    )\n  }\n\n  // Gaoji = () => {\n  //   return (\n  //     <Form name=\"dynamic_form_nest_item\" onFinish={this.onFinish} autoComplete=\"off\">\n  //       <Form.List name=\"users\">\n  //         {(fields, { add, remove }) => (\n  //           <>\n  //             {fields.map(field => (\n  //               <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n  //                 <Form.Item\n  //                   {...field}\n  //                   name={[field.name, 'first']}\n  //                   fieldKey={[field.fieldKey, 'first']}\n  //                   rules={[{ required: true, message: 'Missing first name' }]}\n  //                 >\n  //                   <Select style={{ width: 100 }} size=\"large\" defaultValue=\"and\">\n  //                     {condition.map(item => (\n  //                       <Option key={item.value} value={item.value}>\n  //                         {item.label}\n  //                       </Option>\n  //                     ))}\n  //                   </Select>\n  //                 </Form.Item>\n\n  //                 <Form.Item\n  //                   {...field}\n  //                   name={[field.name, 'first']}\n  //                   fieldKey={[field.fieldKey, 'first']}\n  //                   rules={[{ required: true, message: 'Missing first name' }]}\n  //                 >\n  //                   <Select style={{ width: 150 }} size=\"large\" defaultValue=\"arbitrary\">\n  //                     {category.map(item => (\n  //                       <Option key={item.value} value={item.value}>\n  //                         {item.label}\n  //                       </Option>\n  //                     ))}\n  //                   </Select>\n  //                 </Form.Item>\n\n  //                 <Form.Item\n  //                   {...field}\n  //                   name={[field.name, 'last']}\n  //                   fieldKey={[field.fieldKey, 'last']}\n  //                   rules={[{ required: true, message: 'Missing last name' }]}\n  //                 >\n  //                   <Input placeholder=\"输入查询\" style={{ width: 600 }} size=\"large\" />\n  //                 </Form.Item>\n  //                 <MinusCircleOutlined onClick={() => remove(field.name)} />\n  //               </Space>\n  //             ))}\n  //             <Form.Item>\n  //               <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />} size=\"large\">\n  //                 添加新行\n  //             </Button>\n  //             </Form.Item>\n  //           </>\n  //         )}\n  //       </Form.List>\n  //       <Form.Item>\n  //         <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n  //           查询\n  //       </Button>\n  //       </Form.Item>\n  //     </Form>\n  //   )\n  // }\n\n  render() {\n    const { page, bookList, total } = this.state;\n    return (\n      <div className=\"home\">\n        <Banner />\n        <div className=\"search-background\">\n          {this.Mohu()}\n          {/* <Gaoji /> */}\n          {/* <br /><br />\n        <Button size=\"large\">切换高级检索</Button> */}\n        </div>\n\n        <div className=\"search-result-box\">\n          {\n            bookList.map(item => {\n              const { img, bookName, author, publish, introduce, id } = item;\n              return (\n                <div className=\"search-result\" key={id} onClick={() => this.toDetail(item)}>\n                  <img src={img} alt='' />\n                  <div className=\"search-result-item\">\n                    <div>题  名：{bookName}</div>\n                    <div>作  者：{author}</div>\n                    <div>出版社：{publish}</div>\n                    <div>简  介：{introduce}</div>\n                  </div>\n                </div>\n              );\n            })\n          }\n        </div>\n        <br /><br />\n        <Pagination\n          showSizeChanger\n          onShowSizeChange={this.onShowSizeChange}\n          defaultCurrent={page}\n          total={total}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}